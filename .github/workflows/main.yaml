name: Main
on: [push, pull_request]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.15.3'

      - name: Print Go Version
        run: go version

      - name: Compute Version
        id: version
        run: |
          tag=${GITHUB_REF#refs/tags/}
          publish="no"
          if [ "${tag}" != "${GITHUB_REF}" ]; then
            tag=$(echo "${tag}" | sed -e 's/[^a-zA-Z0-9\-\.]/-/g')
            version=${tag}
            publish="yes"
          fi

          branch=${GITHUB_REF#refs/heads/}
          if [[ -z "${version}" && "${branch}" != "${GITHUB_REF}" ]]; then
            branch=$(echo "${branch}" | sed -e 's/[^a-zA-Z0-9\-\.]/-/g')
            version=${branch}
            if [[ ${branch} = "master" || "${branch}" = "develop" ]]; then
              publish="yes"
            fi
          fi

          if [ -z "${version}" ]; then
            echo "Version could not be determined" >&2
            exit 1
          else
            echo ::set-output name=CI_VERSION::${version}
            echo ::set-output name=PUBLISH::${publish}
          fi

      - name: Build
        run: |
          if [[ ${PUBLISH} = "yes" ]]; then
            make release
          else
            make
          fi
        env:
          CI_VERSION: ${{ steps.version.outputs.CI_VERSION }}
          PUBLISH: ${{ steps.version.outputs.PUBLISH }}

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        if: ${{ steps.version.outputs.PUBLISH == 'yes' }}
        with:
          version: '290.0.1'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Publish
        if: ${{ steps.version.outputs.PUBLISH == 'yes' }}
        run: |
          cd ./release;
          gsutil -m -q cp -r -a public-read . gs://boxops/dockcmd/releases/
